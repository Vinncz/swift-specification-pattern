{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable"],"anchor":"Protocols","generated":true},{"title":"Structures","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSendableKeyPath","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"],"anchor":"Structures","generated":true}],"metadata":{"modules":[{"name":"SpecificationPattern"}],"roleHeading":"Framework","title":"SpecificationPattern","externalID":"SpecificationPattern","role":"collection","symbolKind":"module"},"variants":[{"paths":["\/documentation\/specificationpattern"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[[]]},"references":{"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","abstract":[],"url":"\/documentation\/specificationpattern","role":"collection","type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SPOptionalSPSpecificationCombinable"}],"type":"topic","title":"SPOptionalSPSpecificationCombinable","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Set of additional operations to support conditional composition with optional values."}]},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Specification","kind":"identifier"}],"navigatorTitle":[{"text":"Specification","kind":"identifier"}],"title":"Specification","type":"topic","kind":"symbol","url":"\/documentation\/specificationpattern\/specification","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification","role":"symbol","abstract":[{"type":"text","text":"Generic implementation of the specification design pattern."}]},"doc://SpecificationPattern/documentation/SpecificationPattern/SPSendableKeyPath":{"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSendableKeyPath","navigatorTitle":[{"text":"SPSendableKeyPath","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Sendable wrapper to capture "},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" in a "},{"type":"codeVoice","code":"@Sendable"},{"type":"text","text":" closure."}],"kind":"symbol","url":"\/documentation\/specificationpattern\/spsendablekeypath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPSendableKeyPath","kind":"identifier"}],"type":"topic","title":"SPSendableKeyPath"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPSpecificationCombinable":{"abstract":[{"text":"Declares combinatorial operations that defines specification pattern.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPSpecificationCombinable","kind":"identifier"}],"title":"SPSpecificationCombinable","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable","role":"symbol","navigatorTitle":[{"text":"SPSpecificationCombinable","kind":"identifier"}],"type":"topic","url":"\/documentation\/specificationpattern\/spspecificationcombinable"}}}