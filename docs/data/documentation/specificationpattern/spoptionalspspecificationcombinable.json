{"abstract":[{"type":"text","text":"Set of additional operations to support conditional composition with optional values."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"SPSpecificationCombinable","kind":"typeIdentifier","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable","preciseIdentifier":"s:20SpecificationPattern25SPSpecificationCombinableP"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable"},{"type":"text","text":" to inherit the necessary"},{"type":"text","text":" "},{"type":"text","text":"methods and implementations, that are especially useful while working with optionals;"},{"type":"text","text":" "},{"type":"text","text":"either nil values, or an empty array."}]}],"kind":"content"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyAndBetween:)","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfPresent(_:_:)"],"anchor":"Instance-Methods","generated":true}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"navigatorTitle":[{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"symbolKind":"protocol","externalID":"s:20SpecificationPattern35SPOptionalSPSpecificationCombinableP","title":"SPOptionalSPSpecificationCombinable","modules":[{"name":"SpecificationPattern"}],"roleHeading":"Protocol","role":"symbol"},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable"],"kind":"relationships"},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/specificationpattern\/spoptionalspspecificationcombinable"]}],"hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern"]]},"references":{"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyAndBetween:)":{"defaultImplementations":1,"abstract":[{"type":"text","text":"Evaluates each element against the builder, applies "},{"type":"codeVoice","code":"AND"},{"type":"text","text":" between the results,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"AND"},{"type":"text","text":"s them with self. Returns self unaltered otherwise."}],"role":"symbol","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyandbetween:)","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyAndBetween:)","title":"andIfNotEmpty(_:applyAndBetween:)","kind":"symbol","type":"topic","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"andIfNotEmpty","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"applyAndBetween","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfPresent(_:_:)":{"url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifpresent(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfPresent"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"andIfPresent(_:_:)","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfPresent(_:_:)","defaultImplementations":1,"kind":"symbol","abstract":[{"type":"codeVoice","code":"AND"},{"text":"s self and the given specification if the value is present,","type":"text"},{"text":" ","type":"text"},{"text":"return self unaltered otherwise.","type":"text"}],"required":true},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyOrBetween:)":{"abstract":[{"type":"text","text":"Evaluates each element against the builder, applies "},{"type":"codeVoice","code":"OR"},{"type":"text","text":" between the results,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"AND"},{"type":"text","text":"s them with self. Returns self unaltered otherwise."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"andIfNotEmpty","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"applyOrBetween","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"andIfNotEmpty(_:applyOrBetween:)","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)","required":true,"role":"symbol","type":"topic","defaultImplementations":1,"url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)"},"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","abstract":[],"url":"\/documentation\/specificationpattern","role":"collection","type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Specification","kind":"identifier"}],"navigatorTitle":[{"text":"Specification","kind":"identifier"}],"title":"Specification","type":"topic","kind":"symbol","url":"\/documentation\/specificationpattern\/specification","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification","role":"symbol","abstract":[{"type":"text","text":"Generic implementation of the specification design pattern."}]},"doc://SpecificationPattern/documentation/SpecificationPattern/SPSpecificationCombinable":{"abstract":[{"text":"Declares combinatorial operations that defines specification pattern.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPSpecificationCombinable","kind":"identifier"}],"title":"SPSpecificationCombinable","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable","role":"symbol","navigatorTitle":[{"text":"SPSpecificationCombinable","kind":"identifier"}],"type":"topic","url":"\/documentation\/specificationpattern\/spspecificationcombinable"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SPOptionalSPSpecificationCombinable"}],"type":"topic","title":"SPOptionalSPSpecificationCombinable","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Set of additional operations to support conditional composition with optional values."}]}}}