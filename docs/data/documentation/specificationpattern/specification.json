{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Generic implementation of the specification design pattern."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Specification","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"},{"text":" object to express business logic in a","type":"text"},{"text":" ","type":"text"},{"text":"series of simple, reusable predicates that can be combined using","type":"text"},{"text":" ","type":"text"},{"text":"Boolean algebra operations.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Quick-Usage-Walkthrough","text":"Quick Usage Walkthrough","type":"heading"},{"type":"codeListing","syntax":"swift","code":["\/\/ given the following DS","public struct Computer {","  public let processor: Processor","  public let disks: [Storage]","  public let preloadedSoftwares: [Software]","}","","\/\/ declaring specification is as easy as","import SpecificationPattern","typealias ComputerSpecification = Specification<Computer>","","\/\/ static requirements enable easy chaining","extension ComputerSpecification {","  static func hasProcessorVendor(_ vendor: ProcessorVendor) -> ComputerSpecification {","    .init { $0.processor.vendor == vendor }","  }","  static func hasStorageMinimumOf(_ min: Int) -> ComputerSpecification {","    .init { $0.disks.map({ $0.capacityInGB }).reduce(0, +) >= min }","  }","  static func hasPreloadedSoftware(_ software: Software) -> ComputerSpecification {","    .init { $0.preloadedSoftwares.contains(software) }","  }","}","","\/\/ then, given the need to query things","var minimumStorage: Int? = nil","var preferredProcessorVendor: [ProcessorVendor] = []","var preloadedSoftwares: [Software] = []","","\/\/ simply compose the states together","let searchRequirements = ComputerSpecification.all"," .andIfPresent(minimumStorage) { .hasStorageMinimumOf($0) }"," .andIfNotEmpty(preferredProcessorVendor, applyOrBetween: { .hasProcessorVendor($0) })"," .andIfNotEmpty(preloadedSoftwares, applyAndBetween: { .hasPreloadedSoftware($0) })","","\/\/ delegate the translation process from spec","\/\/ into impl. of API request\/SQLite query\/etc.","let dataSource: ComputerRepository","dataSource.find(matching: spec)"]},{"type":"heading","text":"Learn More","anchor":"Learn-More","level":2},{"inlineContent":[{"type":"text","text":"See the "},{"type":"codeVoice","code":"SpecificationTests"},{"type":"text","text":" for a more varied and detailed implementations."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/specificationpattern\/specification"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable","doc:\/\/SpecificationPattern\/s8SendableP","doc:\/\/SpecificationPattern\/s16SendableMetatypeP"]}],"topicSections":[{"identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/init(isSatisfiedBy:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/isSatisfiedBy"]},{"generated":true,"identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/all(of:)","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/any(of:)","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/where(_:contains:)","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/where(_:equals:)","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/where(_:satisfies:)"],"anchor":"Type-Methods","title":"Type Methods"},{"identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/SPOptionalSPSpecificationCombinable-Implementations","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/SPSpecificationCombinable-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"metadata":{"externalID":"s:20SpecificationPattern0A0V","navigatorTitle":[{"kind":"identifier","text":"Specification"}],"role":"symbol","symbolKind":"struct","title":"Specification","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Specification"}],"modules":[{"name":"SpecificationPattern"}]},"sections":[],"references":{"doc://SpecificationPattern/s8SendableP":{"identifier":"doc:\/\/SpecificationPattern\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/init(isSatisfiedBy:)":{"abstract":[{"type":"text","text":"Initializes a new specification."}],"role":"symbol","title":"init(isSatisfiedBy:)","url":"\/documentation\/specificationpattern\/specification\/init(issatisfiedby:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"isSatisfiedBy"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/init(isSatisfiedBy:)","type":"topic"},"doc://SpecificationPattern/s16SendableMetatypeP":{"type":"unresolvable","title":"Swift.SendableMetatype","identifier":"doc:\/\/SpecificationPattern\/s16SendableMetatypeP"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPSpecificationCombinable":{"url":"\/documentation\/specificationpattern\/spspecificationcombinable","kind":"symbol","title":"SPSpecificationCombinable","navigatorTitle":[{"kind":"identifier","text":"SPSpecificationCombinable"}],"abstract":[{"type":"text","text":"Declares combinatorial operations that defines specification pattern."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPSpecificationCombinable","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable"},"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","url":"\/documentation\/specificationpattern","role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/any(of:)":{"role":"symbol","abstract":[{"type":"text","text":"Reduces the given specifications with "},{"code":"OR","type":"codeVoice"},{"text":" logic.","type":"text"},{"type":"text","text":" "},{"text":"Returns a new specification object that is satisfied when ANY (one or more) are satisfied.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": [","kind":"text"},{"text":"Specification","kind":"typeIdentifier","preciseIdentifier":"s:20SpecificationPattern0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","text":"Specification","preciseIdentifier":"s:20SpecificationPattern0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/any(of:)","title":"any(of:)","type":"topic","url":"\/documentation\/specificationpattern\/specification\/any(of:)"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/where(_:equals:)":{"abstract":[{"type":"text","text":"Equality check shorthand."},{"type":"text","text":" "},{"type":"text","text":"Returns a specification that matches entities where the keypath equals the given value."}],"url":"\/documentation\/specificationpattern\/specification\/where(_:equals:)","kind":"symbol","title":"where(_:equals:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`where`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"equals","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Specification","preciseIdentifier":"s:20SpecificationPattern0A0V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/where(_:equals:)","role":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/isSatisfiedBy":{"role":"symbol","abstract":[{"text":"The predicate closure that evaluates T.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isSatisfiedBy"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/isSatisfiedBy","type":"topic","title":"isSatisfiedBy","url":"\/documentation\/specificationpattern\/specification\/issatisfiedby"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/where(_:contains:)":{"abstract":[{"text":"Element membership check shorthand.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Returns a specification that matches entities where the collection property at the given keypath contains the specified value."}],"kind":"symbol","url":"\/documentation\/specificationpattern\/specification\/where(_:contains:)","title":"where(_:contains:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`where`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"contains","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"Specification","kind":"typeIdentifier","preciseIdentifier":"s:20SpecificationPattern0A0V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"type":"topic","conformance":{"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/where(_:contains:)","role":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/all(of:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Reduces the given specifications with "},{"type":"codeVoice","code":"AND"},{"type":"text","text":" logic."},{"type":"text","text":" "},{"type":"text","text":"Returns a new specification object that is satisfied when EVERY specs are satisfied."}],"role":"symbol","title":"all(of:)","url":"\/documentation\/specificationpattern\/specification\/all(of:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:20SpecificationPattern0A0V","text":"Specification"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"preciseIdentifier":"s:20SpecificationPattern0A0V","text":"Specification","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/all(of:)"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/where(_:satisfies:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`where`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"satisfies"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:20SpecificationPattern0A0V","kind":"typeIdentifier","text":"Specification"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol","title":"where(_:satisfies:)","abstract":[{"text":"Predicate-based check shorthand.","type":"text"},{"type":"text","text":" "},{"text":"Returns a specification that matches entities where the property at the given keypath satisfies the given predicate.","type":"text"}],"url":"\/documentation\/specificationpattern\/specification\/where(_:satisfies:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/where(_:satisfies:)","kind":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/SPOptionalSPSpecificationCombinable-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/SPOptionalSPSpecificationCombinable-Implementations","title":"SPOptionalSPSpecificationCombinable Implementations","kind":"article","url":"\/documentation\/specificationpattern\/specification\/spoptionalspspecificationcombinable-implementations","role":"collectionGroup"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable":{"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","title":"SPOptionalSPSpecificationCombinable","kind":"symbol","type":"topic","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SPOptionalSPSpecificationCombinable"}],"abstract":[{"text":"Set of additional operations to support conditional composition with optional values.","type":"text"}],"role":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/SPSpecificationCombinable-Implementations":{"type":"topic","role":"collectionGroup","title":"SPSpecificationCombinable Implementations","abstract":[],"url":"\/documentation\/specificationpattern\/specification\/spspecificationcombinable-implementations","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/SPSpecificationCombinable-Implementations","kind":"article"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Specification"}],"role":"symbol","title":"Specification","url":"\/documentation\/specificationpattern\/specification","abstract":[{"type":"text","text":"Generic implementation of the specification design pattern."}],"navigatorTitle":[{"kind":"identifier","text":"Specification"}],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification","kind":"symbol"}}}