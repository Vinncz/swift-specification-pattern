{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfNotEmpty"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"values","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"applyOrBetween"},{"kind":"text","text":" "},{"text":"builder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Usage Example","level":2,"type":"heading","anchor":"Usage-Example"},{"syntax":"swift","code":["var preferredProcessorVendor: [ProcessorVendor] = [.amd, .intel]","","\/\/ query computers that have EITHER `.amd` OR `.intel` processor","\/\/ or query ALL computers if empty.","let spec = ComputerSpecification.all","  .andIfNotEmpty(preferredProcessorVendor, applyOrBetween: {","    ComputerSpecification.hasProcessorVendor($0)","  })"],"type":"codeListing"}]}],"abstract":[{"type":"text","text":"Evaluates each element against the builder, applies "},{"type":"codeVoice","code":"OR"},{"text":" between the results,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"type":"codeVoice","code":"AND"},{"text":"s them with self. Returns self unaltered otherwise.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"andIfNotEmpty","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"applyOrBetween"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:20SpecificationPattern35SPOptionalSPSpecificationCombinableP13andIfNotEmpty_14applyOrBetweenxSayqd__G_xqd__XEtlF","title":"andIfNotEmpty(_:applyOrBetween:)","modules":[{"name":"SpecificationPattern"}],"symbolKind":"method","required":true,"role":"symbol","roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)"]}],"defaultImplementationsSections":[{"anchor":"SPOptionalSPSpecificationCombinable-Implementations","title":"SPOptionalSPSpecificationCombinable Implementations","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)-2oapv"]}],"references":{"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyOrBetween:)-2oapv":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfNotEmpty"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"applyOrBetween"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)-2oapv","abstract":[],"title":"andIfNotEmpty(_:applyOrBetween:)","role":"symbol","kind":"symbol","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)-2oapv"},"doc://SpecificationPattern/documentation/SpecificationPattern":{"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","kind":"symbol","url":"\/documentation\/specificationpattern","title":"SpecificationPattern","role":"collection","type":"topic","abstract":[]},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyOrBetween:)":{"required":true,"type":"topic","abstract":[{"text":"Evaluates each element against the builder, applies ","type":"text"},{"code":"OR","type":"codeVoice"},{"text":" between the results,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"code":"AND","type":"codeVoice"},{"text":"s them with self. Returns self unaltered otherwise.","type":"text"}],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)","role":"symbol","defaultImplementations":1,"title":"andIfNotEmpty(_:applyOrBetween:)","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfNotEmpty"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"applyOrBetween"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable":{"url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","abstract":[{"type":"text","text":"Set of additional operations to support conditional composition with optional values."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","role":"symbol","navigatorTitle":[{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"type":"topic","title":"SPOptionalSPSpecificationCombinable"}}}