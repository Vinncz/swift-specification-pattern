{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Evaluates each element against the builder, applies ","type":"text"},{"code":"OR","type":"codeVoice"},{"type":"text","text":" between the results,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"code":"AND","type":"codeVoice"},{"type":"text","text":"s them with self. Returns self unaltered otherwise."}],"kind":"symbol","defaultImplementationsSections":[{"identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)-2oapv"],"anchor":"SPOptionalSPSpecificationCombinable-Implementations","title":"SPOptionalSPSpecificationCombinable Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"andIfNotEmpty","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"values","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"applyOrBetween","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"builder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"Usage-Example","type":"heading","text":"Usage Example","level":2},{"code":["var preferredProcessorVendor: [ProcessorVendor] = [.amd, .intel]","","\/\/ query computers that have EITHER `.amd` OR `.intel` processor","\/\/ or query ALL computers if empty.","let spec = ComputerSpecification.all","  .andIfNotEmpty(preferredProcessorVendor, applyOrBetween: {","    ComputerSpecification.hasProcessorVendor($0)","  })"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)"]}],"hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)"},"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"andIfNotEmpty","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"applyOrBetween","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","required":true,"modules":[{"name":"SpecificationPattern"}],"externalID":"s:20SpecificationPattern35SPOptionalSPSpecificationCombinableP13andIfNotEmpty_14applyOrBetweenxSayqd__G_xqd__XEtlF","title":"andIfNotEmpty(_:applyOrBetween:)","role":"symbol"},"sections":[],"references":{"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyOrBetween:)-2oapv":{"title":"andIfNotEmpty(_:applyOrBetween:)","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)-2oapv","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)-2oapv","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"andIfNotEmpty","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"applyOrBetween","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyOrBetween:)":{"abstract":[{"type":"text","text":"Evaluates each element against the builder, applies "},{"type":"codeVoice","code":"OR"},{"type":"text","text":" between the results,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"AND"},{"type":"text","text":"s them with self. Returns self unaltered otherwise."}],"url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)","kind":"symbol","title":"andIfNotEmpty(_:applyOrBetween:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfNotEmpty"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"applyOrBetween","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","defaultImplementations":1,"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyOrBetween:)","role":"symbol","required":true},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable":{"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","title":"SPOptionalSPSpecificationCombinable","kind":"symbol","type":"topic","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SPOptionalSPSpecificationCombinable"}],"abstract":[{"text":"Set of additional operations to support conditional composition with optional values.","type":"text"}],"role":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","url":"\/documentation\/specificationpattern","role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"}}}