{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Evaluates each element against the builder, applies ","type":"text"},{"code":"AND","type":"codeVoice"},{"text":" between the results,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"type":"codeVoice","code":"AND"},{"text":"s them with self. Returns self unaltered otherwise.","type":"text"}],"kind":"symbol","defaultImplementationsSections":[{"anchor":"SPOptionalSPSpecificationCombinable-Implementations","title":"SPOptionalSPSpecificationCombinable Implementations","identifiers":["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyAndBetween:)-3txvr"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfNotEmpty"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"values"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"applyAndBetween"},{"kind":"text","text":" "},{"text":"builder","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Usage Example","anchor":"Usage-Example","level":2},{"code":["var preloadedSoftwares: [Software] = [.office, .browser]","","\/\/ query computers that have BOTH `.office` AND `.browser` preinstalled.","\/\/ or, query ALL computers if empty.","let spec = ComputerSpecification.all","  .andIfNotEmpty(preloadedSoftwares, applyAndBetween: { software","    ComputerSpecification.hasPreloadedSoftware(software)","  })"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyandbetween:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable"]]},"identifier":{"url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyAndBetween:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:20SpecificationPattern35SPOptionalSPSpecificationCombinableP13andIfNotEmpty_15applyAndBetweenxSayqd__G_xqd__XEtlF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"andIfNotEmpty"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"applyAndBetween"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"andIfNotEmpty(_:applyAndBetween:)","symbolKind":"method","modules":[{"name":"SpecificationPattern"}],"role":"symbol","required":true,"roleHeading":"Instance Method"},"sections":[],"references":{"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","url":"\/documentation\/specificationpattern","role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyAndBetween:)":{"abstract":[{"text":"Evaluates each element against the builder, applies ","type":"text"},{"code":"AND","type":"codeVoice"},{"type":"text","text":" between the results,"},{"type":"text","text":" "},{"type":"text","text":"then "},{"type":"codeVoice","code":"AND"},{"type":"text","text":"s them with self. Returns self unaltered otherwise."}],"url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyandbetween:)","kind":"symbol","title":"andIfNotEmpty(_:applyAndBetween:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"andIfNotEmpty","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"applyAndBetween"},{"kind":"text","text":": ("},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","defaultImplementations":1,"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyAndBetween:)","role":"symbol","required":true},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable":{"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable","title":"SPOptionalSPSpecificationCombinable","kind":"symbol","type":"topic","url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPOptionalSPSpecificationCombinable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SPOptionalSPSpecificationCombinable"}],"abstract":[{"text":"Set of additional operations to support conditional composition with optional values.","type":"text"}],"role":"symbol"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPOptionalSPSpecificationCombinable/andIfNotEmpty(_:applyAndBetween:)-3txvr":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"andIfNotEmpty","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">([","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"applyAndBetween","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"andIfNotEmpty(_:applyAndBetween:)","abstract":[],"url":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyandbetween:)-3txvr","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPOptionalSPSpecificationCombinable\/andIfNotEmpty(_:applyAndBetween:)-3txvr","kind":"symbol"}}}