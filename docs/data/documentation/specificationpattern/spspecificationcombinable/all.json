{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This specification always returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]}]}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"property","externalID":"s:20SpecificationPattern25SPSpecificationCombinableP3allxvpZ","title":"all","modules":[{"name":"SpecificationPattern"}],"roleHeading":"Type Property","role":"symbol","required":true},"variants":[{"paths":["\/documentation\/specificationpattern\/spspecificationcombinable\/all"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable\/all"},"kind":"symbol","abstract":[{"type":"text","text":"Identity element for "},{"code":"AND","type":"codeVoice"},{"type":"text","text":" operations (specification that always satisfy)."}],"hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable"]]},"references":{"doc://SpecificationPattern/documentation/SpecificationPattern/SPSpecificationCombinable":{"abstract":[{"text":"Declares combinatorial operations that defines specification pattern.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SPSpecificationCombinable","kind":"identifier"}],"title":"SPSpecificationCombinable","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable","role":"symbol","navigatorTitle":[{"text":"SPSpecificationCombinable","kind":"identifier"}],"type":"topic","url":"\/documentation\/specificationpattern\/spspecificationcombinable"},"doc://SpecificationPattern/documentation/SpecificationPattern/SPSpecificationCombinable/all":{"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/SPSpecificationCombinable\/all","required":true,"abstract":[{"type":"text","text":"Identity element for "},{"type":"codeVoice","code":"AND"},{"type":"text","text":" operations (specification that always satisfy)."}],"kind":"symbol","url":"\/documentation\/specificationpattern\/spspecificationcombinable\/all","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"all","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"all"},"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","abstract":[],"url":"\/documentation\/specificationpattern","role":"collection","type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"}}}