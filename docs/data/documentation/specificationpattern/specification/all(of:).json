{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/all(of:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"specifications","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"Specification","preciseIdentifier":"s:20SpecificationPattern0A0V","kind":"typeIdentifier","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:20SpecificationPattern0A0V","text":"Specification","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","text":"Behavior","anchor":"Behavior"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Empty array → Returns "},{"code":"all","type":"codeVoice"},{"text":" (satisfied by everything).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Single element → Returns that element unchanged."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Multiple elements → Combines with "},{"type":"codeVoice","code":"AND"},{"text":" via ","type":"text"},{"code":"reduce","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"text":"Usage Example","anchor":"Usage-Example","level":2,"type":"heading"},{"code":["let studioComputerRequirements: [Specification<Computer>] = [","   .hasFormFactor(.desktop),","   .hasProcessorVendor(.amd).or(.hasProcessorVendor(.intel)),","   .hasStorageMinimumOf(1000)"," ]"," let completeSpec: Specification = .all(of: studioComputerRequirements)"," "," \/\/ evaluates to MUST BE desktop AND having (amd or intel) processor AND minimum storage of 1000"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/specificationpattern\/specification\/all(of:)"]}],"abstract":[{"type":"text","text":"Reduces the given specifications with "},{"type":"codeVoice","code":"AND"},{"type":"text","text":" logic."},{"type":"text","text":" "},{"type":"text","text":"Returns a new specification object that is satisfied when EVERY specs are satisfied."}],"metadata":{"modules":[{"name":"SpecificationPattern"}],"externalID":"s:20SpecificationPattern0A0V3all2ofACyxGSayAFG_tFZ","title":"all(of:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Specification","preciseIdentifier":"s:20SpecificationPattern0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"kind":"typeIdentifier","text":"Specification","preciseIdentifier":"s:20SpecificationPattern0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"extendedModule":"SpecificationPattern","role":"symbol","roleHeading":"Type Method"},"references":{"doc://SpecificationPattern/documentation/SpecificationPattern/Specification/all(of:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Reduces the given specifications with "},{"type":"codeVoice","code":"AND"},{"type":"text","text":" logic."},{"type":"text","text":" "},{"type":"text","text":"Returns a new specification object that is satisfied when EVERY specs are satisfied."}],"role":"symbol","title":"all(of:)","url":"\/documentation\/specificationpattern\/specification\/all(of:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"all","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:20SpecificationPattern0A0V","text":"Specification"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"preciseIdentifier":"s:20SpecificationPattern0A0V","text":"Specification","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification\/all(of:)"},"doc://SpecificationPattern/documentation/SpecificationPattern":{"kind":"symbol","url":"\/documentation\/specificationpattern","role":"collection","type":"topic","abstract":[],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern","title":"SpecificationPattern"},"doc://SpecificationPattern/documentation/SpecificationPattern/Specification":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Specification"}],"role":"symbol","title":"Specification","url":"\/documentation\/specificationpattern\/specification","abstract":[{"type":"text","text":"Generic implementation of the specification design pattern."}],"navigatorTitle":[{"kind":"identifier","text":"Specification"}],"identifier":"doc:\/\/SpecificationPattern\/documentation\/SpecificationPattern\/Specification","kind":"symbol"}}}