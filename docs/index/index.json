{"includedArchiveIdentifiers":["SpecificationPattern"],"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyandbetween:)-3txvr","title":"func andIfNotEmpty<T>([T], applyAndBetween: (T) -> Self) -> Self","type":"method"}],"title":"SPOptionalSPSpecificationCombinable Implementations","type":"groupMarker"}],"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyandbetween:)","title":"func andIfNotEmpty<T>([T], applyAndBetween: (T) -> Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)-2oapv","title":"func andIfNotEmpty<T>([T], applyOrBetween: (T) -> Self) -> Self","type":"method"}],"title":"SPOptionalSPSpecificationCombinable Implementations","type":"groupMarker"}],"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifnotempty(_:applyorbetween:)","title":"func andIfNotEmpty<T>([T], applyOrBetween: (T) -> Self) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifpresent(_:_:)-3s9rb","title":"func andIfPresent<T>(T?, (T) -> Self) -> Self","type":"method"}],"title":"SPOptionalSPSpecificationCombinable Implementations","type":"groupMarker"}],"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable\/andifpresent(_:_:)","title":"func andIfPresent<T>(T?, (T) -> Self) -> Self","type":"method"}],"path":"\/documentation\/specificationpattern\/spoptionalspspecificationcombinable","title":"SPOptionalSPSpecificationCombinable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/spspecificationcombinable\/and(_:)","title":"func and(Self) -> Self","type":"method"},{"path":"\/documentation\/specificationpattern\/spspecificationcombinable\/not()","title":"func not() -> Self","type":"method"},{"path":"\/documentation\/specificationpattern\/spspecificationcombinable\/or(_:)","title":"func or(Self) -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/spspecificationcombinable\/all","title":"static var all: Self","type":"property"},{"path":"\/documentation\/specificationpattern\/spspecificationcombinable\/none","title":"static var none: Self","type":"property"}],"path":"\/documentation\/specificationpattern\/spspecificationcombinable","title":"SPSpecificationCombinable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/spsendablekeypath\/init(_:)","title":"init(KeyPath<Root, Value>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/spsendablekeypath\/keypath","title":"let keyPath: KeyPath<Root, Value>","type":"property"}],"path":"\/documentation\/specificationpattern\/spsendablekeypath","title":"SPSendableKeyPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/specification\/init(issatisfiedby:)","title":"init(isSatisfiedBy: (T) -> Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/specification\/issatisfiedby","title":"let isSatisfiedBy: (T) -> Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/specification\/all(of:)","title":"static func all(of: [Specification<T>]) -> Specification<T>","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/any(of:)","title":"static func any(of: [Specification<T>]) -> Specification<T>","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/where(_:contains:)","title":"static func `where`<C>(KeyPath<T, C>, contains: C.Element) -> Specification<T>","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/where(_:equals:)","title":"static func `where`<Value>(KeyPath<T, Value>, equals: Value) -> Specification<T>","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/where(_:satisfies:)","title":"static func `where`<Value>(KeyPath<T, Value>, satisfies: (Value) -> Bool) -> Specification<T>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/specification\/andifnotempty(_:applyandbetween:)","title":"func andIfNotEmpty<T>([T], applyAndBetween: (T) -> Self) -> Self","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/andifnotempty(_:applyorbetween:)","title":"func andIfNotEmpty<T>([T], applyOrBetween: (T) -> Self) -> Self","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/andifpresent(_:_:)","title":"func andIfPresent<T>(T?, (T) -> Self) -> Self","type":"method"}],"path":"\/documentation\/specificationpattern\/specification\/spoptionalspspecificationcombinable-implementations","title":"SPOptionalSPSpecificationCombinable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/specification\/and(_:)","title":"func and(Specification<T>) -> Specification<T>","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/not()","title":"func not() -> Specification<T>","type":"method"},{"path":"\/documentation\/specificationpattern\/specification\/or(_:)","title":"func or(Specification<T>) -> Specification<T>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/specificationpattern\/specification\/all","title":"static var all: Specification<T>","type":"property"},{"path":"\/documentation\/specificationpattern\/specification\/none","title":"static var none: Specification<T>","type":"property"}],"path":"\/documentation\/specificationpattern\/specification\/spspecificationcombinable-implementations","title":"SPSpecificationCombinable Implementations","type":"symbol"}],"path":"\/documentation\/specificationpattern\/specification","title":"Specification","type":"struct"}],"path":"\/documentation\/specificationpattern","title":"SpecificationPattern","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}